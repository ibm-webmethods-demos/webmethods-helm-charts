{{- if .Values.enabled }}

{{- if ((.Values.createDb).enabled) }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "webmethods-dbconfigurator.fullname" . }}-createdb"
  labels:
    {{- include "webmethods-dbconfigurator.labels" . | nindent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 1800
  template:
    spec:
      restartPolicy: Never
      containers:
      - name: "{{ include "webmethods-dbconfigurator.fullname" . }}-createdb"
        {{- if .Values.image.registry }}
        image: {{ printf "%s/%s:%s" .Values.image.registry .Values.image.repository (.Values.image.tag | default .Chart.AppVersion) }}
        {{- else }}
        image: {{ printf "%s:%s" .Values.image.repository (.Values.image.tag | default .Chart.AppVersion) }}
        {{- end }}
        imagePullPolicy: {{ .Values.image.pullPolicy }} 
        env:
          - name: DB_ACTION
            value: create
          - name: PRODUCT_NAMES
            value: STR
          - name: RUN_FINAL_INVENTORY
            value: "true"
          - name: WAITFOR_DB_HOST
            value: "true"
          - name: WAITFOR_DB_TIMEOUT_SEC
            value: "60"
          {{- with .Values.createDb }}
          - name: DB_ADMIN_USER
            value: {{ .dbAdminUser | quote }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .dbAdminPasswordSecret.name }}
                key: {{ .dbAdminPasswordSecret.key }}
          {{- end }}
          {{- with .Values.externaldb }}
          - name: DB_TYPE
            value: {{ .type | quote }}
          - name: DB_HOST
            value: {{ .host | quote }}
          - name: DB_PORT
            value: {{ .port | quote }}
          - name: DB_NAME
            value: {{ .dbName | quote }}
          - name: DB_USER
            value: {{ .user | quote }}
          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .passwordSecret.name }}
                key: {{ .passwordSecret.key }}
          {{- end }}
          {{- if .Values.debug }}
          - name: SCRIPTS_LOGGER_LEVEL
            value: "1"
          {{- end }}
{{- end }}

{{- if ((.Values.createObjects).enabled) }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "webmethods-dbconfigurator.fullname" . }}-createobjects"
  labels:
    {{- include "webmethods-dbconfigurator.labels" . | nindent 4 }}
  annotations:
    # This is what defines this resource as a hook. Without this line, the
    # job is considered part of the release.
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "10"
    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: 5
  activeDeadlineSeconds: 1800
  template:
    spec:
      restartPolicy: Never
      containers:
        - name: "{{ include "webmethods-dbconfigurator.fullname" . }}-createobjects"
          {{- if .Values.image.registry }}
          image: {{ printf "%s/%s:%s" .Values.image.registry .Values.image.repository (.Values.image.tag | default .Chart.AppVersion) }}
          {{- else }}
          image: {{ printf "%s:%s" .Values.image.repository (.Values.image.tag | default .Chart.AppVersion) }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }} 
          env:
            - name: DB_ACTION
              value: create
            - name: RUN_FINAL_INVENTORY
              value: "true"
            - name: WAITFOR_DB_HOST
              value: "true"
            - name: WAITFOR_DB_TIMEOUT_SEC
              value: "60"
            {{- with .Values.createObjects }}
            - name: PRODUCT_NAMES
              value: {{ .productNames | quote }}
            - name: COMPONENT_NAMES
              value: {{ .componentNames | quote }}
            - name: PRODUCT_VERSION
              value: {{ .productVersion | default "latest" | quote }}
            {{- end }}
            {{- with .Values.externaldb }}
            {{- if .url }}
            - name: DB_JDBC_URL
              value: {{ .url | quote }}
            {{- end }}
            {{- if .args }}
            - name: DB_JDBC_ARGS
              value: {{ .args | quote }}
            {{- end }}
            - name: DB_TYPE
              value: {{ .type | quote }}
            - name: DB_HOST
              value: {{ .host | quote }}
            - name: DB_PORT
              value: {{ .port | quote }}
            - name: DB_NAME
              value: {{ .dbName | quote }}
            - name: DB_USER
              value: {{ .user | quote }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .passwordSecret.name }}
                  key: {{ .passwordSecret.key }}
            {{- end }}
            {{- if .Values.debug }}
            - name: SCRIPTS_LOGGER_LEVEL
              value: "1"
            {{- end }}
          volumeMounts:
            {{- with .Values.volumeMounts }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
      volumes:
        {{- with .Values.volumes }}
        {{- tpl . $ | nindent 8 }}
        {{- end }}
{{- end }}

{{- end }}

