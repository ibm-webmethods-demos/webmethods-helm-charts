---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "webmethods-devportal.fullname" . }}
  labels:
    {{- include "webmethods-devportal.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "webmethods-devportal.fullname.headless" . }}
  replicas: {{ .Values.replicaCount }}
  # The default is to deploy all pods serially. By setting this to parallel all pods are started at
  # the same time when bootstrapping the cluster
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: RollingUpdate
    rollingUpdate: 
      partition: 0
  selector:
    matchLabels:
      {{- include "webmethods-devportal.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "webmethods-devportal.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "webmethods-devportal.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        {{- if .Values.waitforelastic.enabled }}
        - name: wait-for-es
          securityContext:
            {{- toYaml .Values.waitforelastic.securityContext | nindent 12 }}
          {{- if .Values.waitforelastic.image.registry }}
          image: {{ printf "%s/%s:%s" .Values.waitforelastic.image.registry .Values.waitforelastic.image.repository (.Values.waitforelastic.image.tag | default .Chart.AppVersion) }}
          {{- else }}
          image: {{ printf "%s:%s" .Values.waitforelastic.image.repository (.Values.waitforelastic.image.tag | default .Chart.AppVersion) }}
          {{- end }}
          imagePullPolicy: {{ .Values.waitforelastic.image.pullPolicy }}
          env:
            {{- if .Values.waitforelastic.uri }}
            - name: ELASTIC_URI
              value: "{{ .Values.waitforelastic.uri }}"
            {{- end }}
            {{- if .Values.waitforelastic.usernameSecret }}
            - name: ELASTIC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.waitforelastic.usernameSecret.name }}"
                  key: "{{ .Values.waitforelastic.usernameSecret.key }}"
            {{- else }}
            {{- if .Values.waitforelastic.username }}
            - name: ELASTIC_USERNAME
              value: "{{ .Values.waitforelastic.username }}"
            {{- end }}
            {{- end }}
            {{- if .Values.waitforelastic.passwordSecret }}
            - name: ELASTIC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.waitforelastic.passwordSecret.name }}"
                  key: "{{ .Values.waitforelastic.passwordSecret.key }}"
            {{- end }}
          command:
            - sh
            - -c
            - |
              #!/bin/sh -e
              http () {
                  local path="${1}"
                  if [ -n "${ELASTIC_USERNAME}" ] && [ -n "${ELASTIC_PASSWORD}" ]; then
                    BASIC_AUTH="-u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}"
                  else
                    BASIC_AUTH=''
                  fi
                  curl -XGET -s -k --fail ${BASIC_AUTH} ${ELASTIC_URI}${path}
              }

              until http "/_cluster/health?wait_for_status={{ .Values.waitforelastic.status }}&timeout=1s"; do
                  echo "waiting for Elasticsearch at ${ELASTIC_URI} to reach status {{ .Values.waitforelastic.status }}"
                  sleep 10;
              done
              echo ""
              echo "Elasticsearch available!"
              exit 0;
        {{- end }}
        {{- with .Values.initContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      containers:
        - name: {{ include "webmethods-devportal.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- if .Values.image.registry }}
          image: {{ printf "%s/%s:%s" .Values.image.registry .Values.image.repository (.Values.image.tag | default .Chart.AppVersion) }}
          {{- else }}
          image: {{ printf "%s:%s" .Values.image.repository (.Values.image.tag | default .Chart.AppVersion) }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.containerPorts }}
          ports:
            - containerPort:  {{ int .http }}
              name: http
              protocol: TCP
            - containerPort:  {{ int .https }}
              name: https
              protocol: TCP
          {{- end }}
          {{- with .Values.startupProbe }}
          {{- if .enabled }}
          startupProbe:
            failureThreshold: {{ .failureThreshold }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            httpGet:
              path: /portal/rest/v1/health
              port: {{ int $.Values.containerPorts.http }}
              scheme: HTTP
          {{- end }}
          {{- end }}
          {{- with .Values.livenessProbe }}
          {{- if .enabled }}
          livenessProbe:
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            tcpSocket:
              port: {{ int $.Values.containerPorts.http }}
          {{- end }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          {{- if .enabled }}
          readinessProbe:
            successThreshold: {{ .successThreshold }}
            failureThreshold: {{ .failureThreshold }}
            initialDelaySeconds: {{ .initialDelaySeconds }}
            periodSeconds: {{ .periodSeconds }}
            timeoutSeconds: {{ .timeoutSeconds }}
            httpGet:
              path: /portal/rest/v1/health
              port: {{ int $.Values.containerPorts.http }}
              scheme: HTTP
          {{- end }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.settings.profile }}
            - name: SPRING_PROFILES_ACTIVE
              value: "{{ .Values.settings.profile }}"
            {{- end }}
            {{- if .Values.settings.javaMemMin }}
            - name: JAVA_MIN_MEM
              value: "{{ .Values.settings.javaMemMin }}"
            {{- end }}
            {{- if .Values.settings.javaMemMax }}
            - name: JAVA_MAX_MEM
              value: "{{ .Values.settings.javaMemMax }}"
            {{- end }}
            {{- if .Values.settings.javaOpts }}
            - name: JAVA_OPTS
              value: "{{ .Values.settings.javaOpts }}"
            {{- end }}
            {{- if .Values.settings.tenant }}
            - name: PORTAL_SERVER_CONFIG_TENANT
              value: "{{ .Values.settings.tenant }}"
            {{- end }}
            {{- if .Values.settings.elastic.uris }}
            - name: SPRING_ELASTICSEARCH_URIS
              value: "{{ .Values.settings.elastic.uris }}"
            {{- end }}
            {{- if .Values.settings.elastic.usernameSecret }}
            - name: SPRING_ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.settings.elastic.usernameSecret.name }}"
                  key: "{{ .Values.settings.elastic.usernameSecret.key }}"
            {{- else }}
            {{- if .Values.settings.elastic.username }}
            - name: SPRING_ELASTICSEARCH_USERNAME
              value: "{{ .Values.settings.elastic.username }}"
            {{- end }}
            {{- end }}
            {{- if .Values.settings.elastic.passwordSecret }}
            - name: SPRING_ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "{{ .Values.settings.elastic.passwordSecret.name }}"
                  key: "{{ .Values.settings.elastic.passwordSecret.key }}"
            {{- end }}
            {{- if .Values.settings.loadbalancerUrl }}
            - name: PORTAL_SERVER_UMC_LB_URL
              value: "{{ .Values.settings.loadbalancerUrl }}"
            {{- end }}
            {{- if .Values.licenseSecret }}
            - name: PORTAL_SERVER_CONFIG_LICENSE
              value: /opt/softwareag/licenseKey.xml
            {{- end }}
            {{- if .Values.settings.customTrustCerts }}
            - name: CUSTOM_TRUST_CERTS
              value: {{ include "webmethods-devportal.joinListWithSpaces" .Values.settings.customTrustCerts | quote }}
            {{- end }}
            {{- include "webmethods-devportal.dpo_endpoints_envs" . | indent 12 }}
            {{- with .Values.settings.envConfigs }}
            {{- include "webmethods-devportal.dictToEnvs" . | indent 12 }}
            {{- end }}
            {{- with .Values.settings.envSecretConfigs }}
            {{- include "webmethods-devportal.secretsDictToEnvs" . | indent 12 }}
            {{- end }}
            {{- with .Values.settings.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          volumeMounts:
            {{- if .Values.licenseSecret }}
            - name: devportal-license
              mountPath: /opt/softwareag/licenseKey.xml
              subPath: {{ .Values.licenseSecret.path }}
              readOnly: true
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- tpl . $ | nindent 12 }}
            {{- end }}
      volumes:
      {{- if .Values.licenseSecret }}
      - name: devportal-license
        secret:
          secretName: {{ .Values.licenseSecret.name }}
          items:
          - key: {{ .Values.licenseSecret.key }}
            path: {{ .Values.licenseSecret.path }}
      {{- end }}
      {{- with .Values.extraVolumes }}
      {{- tpl . $ | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}