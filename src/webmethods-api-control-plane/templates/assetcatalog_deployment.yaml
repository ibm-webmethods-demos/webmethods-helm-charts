apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "webmethods-api-control-plane.name-assetcatalog" . }}
  labels:
    {{- include "webmethods-api-control-plane.labels" . | nindent 4 }}
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.applications.assetcatalog.replicas }}
  selector:
    matchLabels:
      {{- include "webmethods-api-control-plane.selectorLabels" . | nindent 6 }}
      app: {{ .Values.applications.assetcatalog.name }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      {{- with .Values.applications.assetcatalog.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "webmethods-api-control-plane.selectorLabels" . | nindent 8 }}
        app: {{ .Values.applications.assetcatalog.name }}
        date: "{{ now | unixEpoch }}"
    spec:
      serviceAccountName: {{ include "webmethods-api-control-plane.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.applications.assetcatalog.podSecurityContext | nindent 8 }}
      automountServiceAccountToken: false
      containers:
      - name: {{ .Values.applications.assetcatalog.name }}
        image: {{ .Values.applications.assetcatalog.imageName }}:{{ .Values.applications.assetcatalog.imageTag }}
        envFrom:
        - configMapRef:
            name: {{ include "webmethods-api-control-plane.name-assetcatalog" . }}
        env:
        {{- if .Values.applications.es_external.enabled }}
        {{- with .Values.applications.es_external.connection.auth }}
        - name: SERVICE_ELASTICSEARCH_USERNAME
          value: {{ .userName }}
        - name: SERVICE_ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .passwordSecret.name }}
              key: {{ .passwordSecret.key }}
        {{- end }}
        {{- end }}
        imagePullPolicy: Always
        securityContext:
          {{- toYaml .Values.applications.assetcatalog.containerSecurityContext | nindent 10 }}
        resources:
          limits:
            cpu: {{ .Values.applications.assetcatalog.resources.limits.cpu }}
            memory: {{ .Values.applications.assetcatalog.resources.limits.memory }}
          requests:
            cpu: {{ .Values.applications.assetcatalog.resources.requests.cpu }}
            memory: {{ .Values.applications.assetcatalog.resources.requests.memory }}
        ports:
          - containerPort: 8080
            name: http
        readinessProbe:
          httpGet:
            path: /api/assetcatalog/health/readiness
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        livenessProbe:
          httpGet:
            path: /api/assetcatalog/health/liveness
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 20
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        volumeMounts:
          {{- with .Values.applications.es_external }}
          {{- if and .enabled .connection.auth.certsSecret.name }}
          - name: es-certs
            mountPath: /mnt/certs
            readOnly: true
          {{- end }}
          {{- end }}
      volumes:
        {{- with .Values.applications.es_external }}
        {{- if and .enabled .connection.auth.certsSecret.name }}
        - name: es-certs
          secret:
            secretName: {{ .connection.auth.certsSecret.name }}
        {{- end }}
        {{- end }}
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: {{ .Values.imagePullSecretName }}